#!/bin/bash
dnf -y update
dnf -y install python3-pip
pip3 install --upgrade pip
pip3 install flask boto3

# Create app
mkdir -p /opt/photoapp
cat >/opt/photoapp/app.py << 'PY'
import os, io, boto3
from flask import Flask, request, redirect, url_for, render_template_string
from werkzeug.utils import secure_filename

BUCKET = os.environ.get("BUCKET_NAME")
s3 = boto3.client("s3")
app = Flask(__name__)

TEMPLATE = """
<!DOCTYPE html><html><body>
  <h2>Photo Uploader & Thumbnails</h2>
  <form method="POST" action="/upload" enctype="multipart/form-data">
    <input type="file" name="file" accept="image/*" required />
    <button type="submit">Upload</button>
  </form>
  <h3>Thumbnails (generated by Lambda)</h3>
  {% for url in thumbs %}
    <img src="{{url}}" style="margin:6px;max-width:200px;max-height:200px;border:1px solid #ccc"/>
  {% else %}
    <p>No thumbnails yet.</p>
  {% endfor %}
</body></html>
"""

def presigned(key, expires=3600):
    return s3.generate_presigned_url(
        "get_object",
        Params={"Bucket": BUCKET, "Key": key},
        ExpiresIn=expires
    )

@app.route("/", methods=["GET"])
def index():
    resp = s3.list_objects_v2(Bucket=BUCKET, Prefix="thumbs/")
    thumbs = []
    for obj in resp.get("Contents", []):
        key = obj["Key"]
        if key.endswith("/"):  # skip 'folder' placeholders
            continue
        thumbs.append(presigned(key))
    return render_template_string(TEMPLATE, thumbs=thumbs)

@app.route("/upload", methods=["POST"])
def upload():
    f = request.files["file"]
    fname = secure_filename(f.filename)
    if not fname:
        return redirect(url_for("index"))
    key = f"uploads/{fname}"
    s3.upload_fileobj(f, BUCKET, key, ExtraArgs={"ContentType": f.mimetype})
    return redirect(url_for("index"))

if __name__ == "__main__":
    app.run(host="0.0.0.0", port=5000)
PY

# systemd service to keep it running
cat >/etc/systemd/system/photoapp.service << 'UNIT'
[Unit]
Description=Flask Photo App
After=network.target

[Service]
Environment=BUCKET_NAME=YOUR_BUCKET_NAME
ExecStart=/usr/bin/python3 /opt/photoapp/app.py
WorkingDirectory=/opt/photoapp
Restart=always
User=root

[Install]
WantedBy=multi-user.target
UNIT

systemctl daemon-reload
systemctl enable --now photoapp

